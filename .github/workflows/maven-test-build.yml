# Este workflow irá construir um projeto Java com Maven, e cache/restaurar dependências para melhorar o tempo de execução.
# Os testes de unidade serão executados usando o banco de dados em memória H2, o que é mais rápido e isolado.

name: Java CI with Maven

on:
  push:
    branches: [ "main", "staging" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up SDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run Unit Tests (using H2 in-memory DB)
        run: mvn test --batch-mode --update-snapshots verify -Ptest

  build:
    runs-on: 'ubuntu-latest'
    needs: tests # Garante que a build só ocorra se os testes passarem
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: https://index.docker.io/v1/
          username: ${{ secrets.DOCKERHUB_USERNAME  }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: index.docker.io/${{ secrets.DOCKERHUB_USERNAME }}/esg-fiap-java:${{ github.sha }}
          file: ./Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{  steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'esg-fiap-java'
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_PROFILE }}
          images: 'index.docker.io/${{ secrets.DOCKERHUB_USERNAME }}/esg-fiap-java:${{ github.sha }}'
